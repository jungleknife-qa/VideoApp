// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VideoApp.DBContexts;

namespace VideoApp.Migrations
{
    [DbContext(typeof(MyDBContext))]
    [Migration("20220103121907_DBInit")]
    partial class DBInit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("VideoApp.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_Customers");

                    b.HasIndex("FirstName")
                        .HasDatabaseName("Idx_FirstName");

                    b.HasIndex("LastName")
                        .HasDatabaseName("Idx_LastName");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("VideoApp.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_Movies");

                    b.HasIndex("Title")
                        .HasDatabaseName("Idx_Title");

                    b.HasIndex("Year")
                        .HasDatabaseName("Idx_Year");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("VideoApp.Models.Rental", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndRental")
                        .HasColumnType("datetime");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartRental")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK_Rentals");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EndRental")
                        .HasDatabaseName("Idx_EndRental");

                    b.HasIndex("MovieId");

                    b.HasIndex("StartRental")
                        .HasDatabaseName("Idx_StartRental");

                    b.ToTable("Rentals");
                });

            modelBuilder.Entity("VideoApp.Models.Rental", b =>
                {
                    b.HasOne("VideoApp.Models.Customer", null)
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_Rental_Customer")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("VideoApp.Models.Movie", null)
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .HasConstraintName("FK_Rental_Movie")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
